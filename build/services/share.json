{
"basePath": "/",
"definitions": {
	"ApiResponse": {
		"properties": {
			"code": {
				"format": "int32",
				"type": "integer"
				},
			"message": {
				"type": "string"
				},
			"type": {
				"type": "string"
				}
			},
		"type": "object"
		},
	"Category": {
		"properties": {
			"id": {
				"format": "int64",
				"type": "integer"
				},
			"name": {
				"type": "string"
				}
			},
		"type": "object",
		"xml": {
			"name": "Category"
			}
		},
	"Order": {
		"properties": {
			"complete": {
				"default": false,
				"type": "boolean"
				},
			"id": {
				"format": "int64",
				"type": "integer"
				},
			"petId": {
				"format": "int64",
				"type": "integer"
				},
			"quantity": {
				"format": "int32",
				"type": "integer"
				},
			"shipDate": {
				"format": "date-time",
				"type": "string"
				},
			"status": {
				"description": "Order Status",
				"enum": [
					"placed",
					"approved",
					"delivered"
					],
				"type": "string"
				}
			},
		"type": "object",
		"xml": {
			"name": "Order"
			}
		},
	"Tag": {
		"properties": {
			"id": {
				"format": "int64",
				"type": "integer"
				},
			"name": {
				"type": "string"
				}
			},
		"type": "object",
		"xml": {
			"name": "Tag"
			}
		},
	"User": {
		"properties": {
			"email": {
				"type": "string"
				},
			"firstName": {
				"type": "string"
				},
			"id": {
				"format": "int64",
				"type": "integer"
				},
			"lastName": {
				"type": "string"
				},
			"password": {
				"type": "string"
				},
			"phone": {
				"type": "string"
				},
			"username": {
				"type": "string"
				},
			"userStatus": {
				"description": "User Status",
				"format": "int32",
				"type": "integer"
				}
			},
		"type": "object",
		"xml": {
			"name": "User"
			}
		}
	},
"host": "api.lucacastelnuovo.nl",
"info": {
	"contact": {
		"email": "ltcastelnuovo@gmail.com"
		},
	"description": "This is an example for the API server.",
	"license": {
		"name": "MIT License",
		"url": "https://opensource.org/licenses/MIT"
		},
	"title": "API",
	"version": "1.0.0"
	},
"paths": {
	"/mail": {
		"post": {
			"consumes": [
				"application/json"
				],
			"description": "",
			"operationId": "sendMail",
			"parameters": [
				{
					"description": "Pet object that needs to be added to the store",
					"in": "body",
					"name": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Pet"
						}
					}
				],
			"produces": [
				"application/json"
				],
			"responses": {
				"405": {
					"description": "Invalid input"
					}
				},
			"security": [
				{
					"api_oauth": [
						"basic:read"
						]
					}
				],
			"summary": "Send mail",
			"tags": [
				"mail"
				]
			}
		},
	"/user": {
		"post": {
			"description": "This can only be done by the logged in user.",
			"operationId": "createUser",
			"parameters": [
				{
					"description": "Created user object",
					"in": "body",
					"name": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
						}
					}
				],
			"produces": [
				"application/json"
				],
			"responses": {
				"default": {
					"description": "successful operation"
					}
				},
			"summary": "Create user",
			"tags": [
				"user"
				]
			}
		},
	"/user/{username}": {
		"delete": {
			"description": "This can only be done by the logged in user.",
			"operationId": "deleteUser",
			"parameters": [
				{
					"description": "The name that needs to be deleted",
					"in": "path",
					"name": "username",
					"required": true,
					"type": "string"
					}
				],
			"produces": [
				"application/json"
				],
			"responses": {
				"400": {
					"description": "Invalid username supplied"
					},
				"404": {
					"description": "User not found"
					}
				},
			"summary": "Delete user",
			"tags": [
				"user"
				]
			},
		"get": {
			"description": "",
			"operationId": "getUserByName",
			"parameters": [
				{
					"description": "The name that needs to be fetched. Use user1 for testing. ",
					"in": "path",
					"name": "username",
					"required": true,
					"type": "string"
					}
				],
			"produces": [
				"application/json"
				],
			"responses": {
				"200": {
					"description": "successful operation",
					"schema": {
						"$ref": "#/definitions/User"
						}
					},
				"400": {
					"description": "Invalid username supplied"
					},
				"404": {
					"description": "User not found"
					}
				},
			"summary": "Get user by user name",
			"tags": [
				"user"
				]
			},
		"put": {
			"description": "This can only be done by the logged in user.",
			"operationId": "updateUser",
			"parameters": [
				{
					"description": "name that need to be updated",
					"in": "path",
					"name": "username",
					"required": true,
					"type": "string"
					},
				{
					"description": "Updated user object",
					"in": "body",
					"name": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/User"
						}
					}
				],
			"produces": [
				"application/json"
				],
			"responses": {
				"400": {
					"description": "Invalid user supplied"
					},
				"404": {
					"description": "User not found"
					}
				},
			"summary": "Updated user",
			"tags": [
				"user"
				]
			}
		}
	},
"schemes": [
	"https"
	],
"securityDefinitions": {
	"api_oauth": {
		"authorizationUrl": "http://accounts.lucacastelnuovo.nl/auth/authorize",
		"flow": "implicit",
		"scopes": {
			"applications:read": "Read only access to authorized applications",
			"basic": "Read and write access to basic profile information",
			"basic:read": "Read only access to basic profile information",
			"email": "Read and write access to profile email",
			"email:read": "Read only access to profile email"
			},
		"type": "oauth2"
		}
	},
"swagger": "2.0",
"tags": [
	{
		"description": "Send mails from your application",
		"name": "mail"
		},
	{
		"description": "Easily validate recaptcha responses",
		"name": "recaptcha"
		},
	{
		"description": "View info about access token",
		"name": "token"
		},
	{
		"description": "Operations about user",
		"name": "user"
		}
	]
}